<?php
/**
 * @file
 * Contains implementation of cron function to execute scheduled migrations.
 */

use Drupal\migrate\MigrateExecutable;
use Drupal\migrate\MigrateMessage;
use Drupal\migrate\Plugin\MigrationInterface;

/**
 * Implements hook_cron().
 */
function product_migrate_cron() {
  // Get list of all the migrations from configuration.
  $conf = \Drupal::config('product_migrate')->get('migrations');
  if (!empty($conf)) {
    $state = \Drupal::state();
    // Loop over the list of the migrations and check if they require
    // execution.
    foreach ($conf as $migration => $settings) {
      $next_execution_time = $state->get("{$migration}_next_execution", 0);
      $current_time = \Drupal::time()->getRequestTime();
      // If it is the first time of the migration execution, or past the next
      // execution time.
      if ($current_time > $next_execution_time) {
        $options = [];
        $state->set("{$migration}_next_execution", $current_time + $settings['time']);
        // Prevent non-existent migrations from breaking cron.
        $migration = \Drupal::service('plugin.manager.migration')->createInstance($migration);
        if ($migration) {
          // Check if the migration status is IDLE, if not, make it so.
          $status = $migration->getStatus();
          if ($status !== MigrationInterface::STATUS_IDLE) {
            \Drupal::logger('migration_cron')->notice($status);
            $migration->setStatus(MigrationInterface::STATUS_IDLE);
          }
          // If the migration is to be executed using an `--update` flag.
          if (isset($settings['update']) && $settings['update']) {
            $migration_update = $migration->getIdMap();
            $migration_update->prepareUpdate();
          }
          // If the migration is to be executed using a `--sync` flag.
          if (isset($settings['sync']) && $settings['sync']) {
            $migration->set('syncSource', TRUE);
          }
          $executable = new MigrateExecutable($migration, new MigrateMessage());
          $executable->import();
          \Drupal::logger('migration_cron')->notice('Migration Cron is completed.');
        }
      }
    }
  }
}
